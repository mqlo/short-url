version: '3.7'

services:
  nginx:
    build:
      context: docker
      dockerfile: development/nginx/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    ports:
      - "8280:8080"
    volumes:
      - ./:/app
    restart: on-failure
    depends_on:
      - php-fpm

  node-cli:
    build:
      context: docker
      dockerfile: development/node/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-node-cli
    volumes:
      - ./:/app

  php-fpm:
    build:
      context: docker
      dockerfile: development/php-fpm/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-php-fpm
    environment:
      DATABASE_URL: "postgresql://app:secret@postgres:5432/app?serverVersion=12.2&charset=utf8"
    volumes:
      - ./:/app

  php-cli:
    build:
      context: docker
      dockerfile: development/php-cli/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-php-cli
    environment:
      DATABASE_URL: "postgresql://app:secret@postgres:5432/app?serverVersion=12.2&charset=utf8"
    volumes:
      - ./:/app

#  mysql:
#    image: mysql:5.7
#    container_name: ${COMPOSE_PROJECT_NAME}-mysql
#    volumes:
#      - mysql:/var/lib/mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: "secret"
#      MYSQL_USER: "app"
#      MYSQL_PASSWORD: "secret"
#      MYSQL_DATABASE: "app"
#    ports:
#      - "33061:3306"

  postgres:
    image: postgres:12.2-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    ports:
      - "54323:5432"
    environment:
      LANG: ru_RU.utf8
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure

  mailer:
    container_name: ${COMPOSE_PROJECT_NAME}-mailer
    image: mailhog/mailhog
    ports:
      - "8225:8025"

#  redis:
#    image: redis:3.0
#    container_name: ${COMPOSE_PROJECT_NAME}-redis
volumes:
  postgres:
